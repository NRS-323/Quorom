@model TaskChallengeVM.GetTaskChallengeListVM
<section class="col-12 grid-margin stretch-card">
    <div class="card">
        <img src="@Url.Content(ViewBag.BannerImageUrl)" alt="Banner Image" class="img-fluid" />
    </div>
</section>
<br />
<style>
    .avatar-sm {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .table-hover tbody tr:hover {
        transform: translateX(4px);
        transition: transform 0.2s ease;
    }

    .text-truncate {
        max-width: 250px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .card-header .btn {
        border-radius: 20px;
        padding: 0.5rem 1.5rem;
    }
</style>
<div class="card shadow-lg">
    <div class="card-header bg-danger text-white py-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h3 class="mb-0">
                    <i class="ti-alert me-2"></i>Task Challenges
                    <span class="badge bg-white text-primary ms-2">@Model.TaskTitle</span>
                </h3>
                <p class="mb-0 mt-2 text-light opacity-75">
                    Total Challenges: @Model.TaskChallenges.Count
                </p>
            </div>
            <div class="d-flex gap-3">
                <a asp-controller="InitiativeTask" asp-action="GetInitiativeTasks" 
                   asp-route-id="@ViewBag.Initiative"
                   class="btn btn-light">
                    <i class="ti-arrow-left me-2"></i>Back to Task
                </a>
                <a asp-controller="TaskChallenge" asp-action="AddTaskChallenge" 
                   asp-route-id="@Model.TaskId"
                   class="btn btn-light">
                    <i class="ti-plus me-2"></i>Add Challenge
                </a>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card bg-light-primary">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="avatar-sm bg-danger text-white rounded-circle me-3">
                                <i class="ti-alert fs-4"></i>
                            </div>
                            <div>
                                <div class="text-muted">Open Challenges</div>
                                <h3 class="mb-0">@Model.TaskChallenges.Count</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card bg-light-success">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="avatar-sm bg-success text-white rounded-circle me-3">
                                <i class="ti-stats-up fs-4"></i>
                            </div>
                            <div>
                                <div class="text-muted">Recent Activity</div>
                                <div>
                                    Last updated:@if (Model.TaskChallenges.Count == 0)
                                    {
                                        <p>N/A</p>
                                    }
                                    else
                                    {
                                        @if (Model.TaskChallenges.Max(c => c.UpdatedOnDateTime) == null)
                                        {
                                            @Model.TaskChallenges.Max(c => c.CreatedOnDateTime).ToString("MMM dd, yyyy @ hh:mm tt")
                                        }
                                        else
                                        {
                                            @Model.TaskChallenges.Max(c => c.UpdatedOnDateTime).ToString("MMM dd, yyyy @ hh:mm tt")
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th class="ps-4">#</th>
                        <th>Challenge</th>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Created By</th>
                        <th>Created On</th>
                        <th class="text-end pe-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.TaskChallenges)
                    {
                        <tr id="a_@item.TaskChallengeId">
                            <td class="ps-4 fw-bold">@(Model.TaskChallenges.IndexOf(item) + 1)</td>
                            
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="avatar-sm bg-light-primary rounded-circle me-3">
                                        <i class="ti-alert text-primary"></i>
                                    </div>
                                    <div>
                                        <div class="fw-bold">@item.Title</div>
                                        <small class="text-muted">ID: @item.TaskChallengeId.ToString().Substring(0,8)</small>
                                    </div>
                                </div>
                            </td>
                            
                            <td>
                                <span class="badge @GetChallengeTypeBadge(item.ChallengeType)">
                                    @item.ChallengeType
                                </span>
                            </td>
                            
                            <td>
                                <div class="text-truncate" style="max-width: 250px" 
                                     data-bs-toggle="tooltip" title="@item.Description">
                                    @item.Description
                                </div>
                            </td>
                            
                            <td>
                                <div class="d-flex align-items-center">
                                    @item.CreatedByUserId
                                </div>
                            </td>
                            
                            <td>
                                <div class="text-nowrap">
                                    @item.CreatedOnDateTime.ToString("MMM dd, yyyy")
                                </div>
                                <small class="text-muted">
                                    @item.CreatedOnDateTime.ToString("HH:mm tt")
                                </small>
                            </td>
                            
                            <td class="text-end pe-4">
                                <div class="d-flex gap-2 justify-content-end">
                                    <a asp-controller="TaskChallenge" 
                                       asp-action="UpdateTaskChallenge" 
                                       asp-route-id="@item.TaskChallengeId"
                                       class="btn btn-sm btn-outline-primary"
                                       data-bs-toggle="tooltip" title="Edit Challenge">
                                        <i class="ti-pencil-alt"></i>
                                    </a>
                                    <a href="#" 
                                       class="btn btn-sm btn-outline-danger"
                                       data-bs-toggle="tooltip" title="Delete Challenge"
                                       onclick="return confirm('Are you sure?')">
                                        <i class="ti-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            
            @if (!Model.TaskChallenges.Any())
            {
                <div class="alert alert-info mt-4">
                    <i class="ti-info-alt me-2"></i>
                    No challenges found for this task.
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetChallengeTypeBadge(string challengeType)
    {
        return challengeType switch
        {
            "Technical" => "bg-danger",
            "Resource" => "bg-warning",
            "Timeline" => "bg-info",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        tooltipTriggerList.forEach(tooltipTriggerEl => {
            new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}
